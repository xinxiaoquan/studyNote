以当前文件夹为cmd的工作目录打开，在文件夹中按shift键，右键选择以cmd打开

nodejs规定一个js文件就是一个模块，模块内部定义的变量函数默认情况下外部无法得到

模块成员导出
a.js 导出
	var v = 1.0;
	function sayHi() { console.log("hi") }
	exports.v = v;
	exportx.sayHi = sayHi;
	//module.exports 也可以
b.js 接收
	var obj = require("./a.js") //.js可以省略 这个路径是相对当前文件的相对路径
	console.log(obj.v);
	obj.sayHi();
当exports和module.exports指向的对象不同时，以module.exports为准

系统模块：node运行环境提供的api
	因为这些api都是以模块化的方式进行开发，所以称为系统模块
	使用系统模块的时候需要先引入
		require("fs");
	1.文件操作模块 fs(file system)
		(1).读取文件内容：
			fs.readFile("文件路径", ["文件编码"], function(err, data) {
				//读取文件出错err是一个对象，读取正确err是null
				if (err === null) console.log(data);
			});
		(2).写入文件内容
			//文件不存在会自动创建
			fs.writeFile("文件路径", "写入文件的内容", function(err) {
				if (err !== null) {
					console.log(err);
					return;
				}
				console.log("文件写入成功！");
			});
	2.系统路径模块 path
		(1).路径拼接
			不同的系统路径分隔符不统一
				windows \ /
				Linux /
			var path = require("path");
			var str = path.join("a", "b", "c");
				str 结果是 a/b/c
				参数可以是任意个数
		(2).相对路径和绝对路径
			相对路径是相对命令行工具当前的工作目录，不是文件的目录
			所以在读取或设置文件路径时要选绝对路径
			__dirname获取当前文件所在的绝对路径
			path.join(__dirname, "1.txt");
				当前程序文件目录下的文件，绝对路径

第三方模块：
	别人写好的，具有特定功能的、可以直接使用的模块即是第三方模块，通常由多个文件组成并放置在一个文件夹中，又名包
	存在形式：
		1.以js文件形式存在，提供实现项目具体功能的api
		2.以命令行工具形式存在，辅助项目开发
	获取第三方工具：npm，node的第三方模块管理工具
		下载模块 npm install 模块名称
		卸载模块 npm uninstall 模块名称
	全局安装(npm install aaa -g)和本地安装
		命令行工具 全局安装（所有项目都能用）
		库文件 本地安装（当前项目可用）
nodemon命令行工具
	可以监控js文件是否修改，修改后自动再次执行
	npm install nodemon -g
	nodemon 1.js
nrm命令行工具
	npm下载地址切换工具，npm默认下载地址在国外，国内下载速度慢
	npm install nrm -g
	查询可用的下载地址
		nrm ls 
	切换npm下载地址
		nrm use 下载地址的名称
Gulp库文件
	基于node平台开发的前端构建工具
	将机械化的操作编写成任务，执行命令就能自动自行了
	Gulp的使用：
		1.使用npm install gulp下载库文件
		2.在项目根目录建立gulpfile.js文件
		3.重构项目文件夹结构，src目录放置源代码，dist目录放置构建后的文件
		4.在gulpfile.js文件中编写任务
		5.在命令行工具中执行gulp任务
	在gulpfile.js文件中可以使用的方法
		gulp.src() 获取任务要处理的文件
		gulp.dest() 输出文件
		gulp.task() 建立gulp任务
		gulp.watch() 监控文件变化
	所有的代码都要写在gulpfile.js中
		//引入gulp模块
		var gulp = require("gulp");
		//使用gulp.task建立任务
		//参数1 任务的名称
		//参数2 任务的回调函数
		gulp.task("first", function() {
			//复制一个文件
			gulp.src("src/css/123.css")
				.pipe(gulp.dest("dist/css"));
		});
	执行任务
		先安装gulp命令行工具 npm install gulp-cli -g
		执行任务(当前项目目录) gulp 任务名
		
	























