URL地址：
	URL：unified resource locator 统一的资源定位符
	URN：unified resource naming 统一的资源命名符
	URI：unified resource idenfier 统一的资源识别符
	URI=URL+URN
	URL地址最完整的格式：
		<scheme>://<user>:<pwd>@<host>:<port>/<path>;<params>?<query>#<frag>
	各种协议默认端口号：
		http 80 超文本传输
		https 443 加密超文本传输
		ftp 21 文件上传下载
		dns 53 域名解析
		smtp 25 邮件传输
		pop3 110 邮件接收
		telnet 23 远程登录
		ssh 22 安全的远程登录
HTTP协议概述：
	hyper text transfer protocol
		超文本传输协议，用来浏览器和web服务器传输文本网页
	HTTP/0.9 1991年，有设计缺陷
	HTTP/1.0 1996年，第一个稳定正式版本
	HTTP/1.1 1999年，目前通用版本
	HTTP/1.0到HTTP/1.1的改进：
		1.虚拟主机：在一个web服务器中并存多个站点
		2.持久连接：一次请求完成后，不马上断开连接，保持一会儿
		3.代理主机：客户端可以通过代理服务器间接访问目标服务器
HTTP协议具体内容，规定了如下两种消息格式：
1.请求消息：客户端发给浏览器
	1. 请求起始行
		请求方法+空格+请求URI+空格+协议版本
		请求方法：
			get   客户端想获得服务器的资源
			post  客户端想传递数据给服务器 
			put   客户端想放置文件到服务器上
			delete 客户端想删除服务器上指定文件
			head  客户端想获得服务器上指定资源的响应头部，不要内容
			connect  连接测试
			trace   追踪
			options  选项，保留以后使用
		get和post的请求比较：
			发起请求：
				get：浏览器中输入URL回车、超链接跳转、js跳转、src/href属性、get表单、AJAX
				post：post方式提交表单，AJAX
			请求数据位置：
				get：追加在URI后，作为查询字符串，以?开头
				post：放在请求主体中
			请求数据类型：
				get：只能是文本字符
				post：可以是任意类型，如视频图片
			能否上传文件：
				get：不能
				post：能
			请求数据长度限制：
				get：有，浏览器或服务器对请求URI长度有限制（如1kb、4kb等）
				post：请求主体没有长度限制
			请求数据需要编码吗？
				都需要
			表达的语义：
				get：获取数据
				post：传递数据
	2. 请求头（Headers）
		1. 请求消息专用头部
			Host:127.0.0.1
				告诉服务器请求的是哪一个虚拟主机
			Accept:text/html
				告诉服务器自己可以接收的响应内容类型
			Origin:http://127.0.0.1
				告诉服务器当前请求来源于哪个域名
			Referer:http://127.0.0.1/index.html
				引用页
			User-Agent:……
				客户端告诉浏览器自己的类型
			Accept-Encoding:gzip
				浏览器在告诉服务器自己接收的响应数据压缩类型
			Accept-Language:zh-CN
				告诉服务器自己可以接收的自然语言，服务器可以据此实现国际化网页
		2. 请求/响应消息通用头部
			Connect:keep-alive
				告诉对方启用持久连接
			Pragma:no-cache //http1.0版本
			Cache-Control:no-cache
				告诉对方如何缓存当前消息主体中的数据
			Date:Thu, 01 Dec 2018 5:00:01 GMT
				消息的创建时间
		3. 请求主体描述头
			Content-Length:10
				请求内容的长度
			Content-Type：
				text/plain //请求数据是普通文本，不编码（有的服务器拒接接收）
				application/x-www-form-urlencoded //请求主体是经过编码后的表单数据
				multipart/form-data //表单中包含上传的文件数据
				客户端告诉服务器自己请求主体内容类型
		4. 客户端自定义头部
	3. CRLF
	4. 请求主体（Body）
		客户端想给服务器传递的数据（只有post和put有）
2.响应消息：服务器发给客户端
	1.响应起始行：
		协议版本+空格+响应状态码+原因短句
		响应状态码：
			1XX（提示性信息）100（Continue 继续上传数据）101（Switching Protocols 切换协议）
			2XX（成功的响应）200（ok 成功响应）201（Created 成功接收数据）
			3XX （需要客户端重定向）301（Moved Permanently 页面永久移走）304（Not Modified 比较缓冲文件最后一次修改时间，判断是不是要重新下载）
			4XX（客户端请求错误）400（Bad Request 无效请求）403（Forbidden 禁止访问）404（Not Found 文件不存在）405（Mothed Not Allowed 请求方法不允许）
			5XX（服务器端运行错误）500（Internal Server Error 服务器内部错误）501（Not Implemented 服务器不理解请求）503（Service Unavailable 服务暂时不可用）505（HTTP Version Not Supported 服务器不支持请求协议）
	2.响应头部：
		1.响应消息专用头
			Server:Apache
				告诉客户端服务器类型
			Last-Modified
				指定资源最后一次修改时间
			Content-Encoding:gzip
				告诉客户端内容经过了gzip压缩
		2.响应消息通用头
			和请求头部一样
		3.响应主体描述头
			Content-Length
				内容长度
			Content-Type
				响应主体内容类型（上百种）
					text/plain
					text/html
					text/css
					application/javascript
					application/xml
					application/json
					image/jpeg
					audio/mpeg3
			4.服务器自定义头
		3.CRLF
		4.响应主体：
			客户端请求的文件内容
		5.修改响应头
			1.修改服务器配置（比较复杂，有些情况下无法修改，如虚拟主机）
			2.若响应文件为HTML，可以声明（是等价物，不是真正的响应头）
				<meta http-equiv='响应头部'>
			3.使用动态语言代码控制响应消息头
				php：header(‘Content-Control:no-cache’); //设置一个响应消息头
浏览器连上服务器后，向服务器请求某个web资源，称为浏览器向服务器发送一个http请求
http请求包括：
  请求行：请求方式(get/post) 请求资源 http版本(通常是1.1) 等
  请求消息头：接受内容类型 接受语言 浏览器内核 接受压缩方式 主机名 等
    Accept 浏览器可以接受的数据类型
    Accept-Encoding 浏览器可以接受的压缩格式
    Accept-Language 浏览器可以接受的语言
    Host 请求的主机名
    If-Modified-Since 本地已经有这个资源，这个资源的最新更新时间是什么
    Referer 告诉服务器，这个请求从哪个页面来，链接来路
    User-Agent 浏览器内核
    在php中所有请求消息头都会封装在：
      $_SERVER (预定义超全局数组) 所有HTTP开头的键值就是消息头
      $_SERVER["REMOTE_ADDR"] 表示访问的客户端的地址
  一个空行
  实体内容(发给服务器的内容)
http响应包括：
  状态行：http版本 状态码 状态描述
    常见状态码：
      200 成功
      302 重定向(告诉浏览器到另一个url取资源)
      304 资源未修改(服务器说明浏览器本地的资源已经是最新的，没有修改过)
      403 禁止访问(告诉浏览器没有权限访问该资源)，和php代码无关，是配置的问题
      404 没有该资源(url错误或资源被删除)
      500 服务器内部错误
  响应消息头：
    常用消息头：
      location http://taobao.com 浏览器跳转地址
      content-type text/html 返回的数据类型
			Keep-Alive:timeout=5,max=100 5秒钟内客户端不发http请求就会断开连接，最大连接时间为100秒
      refresh:5;url=123.html 停留多少秒后跳转到相应地址
      last-modified 返回该资源的最新修改时间
        第一次请求会返回此信息，浏览器会记录和缓存文件，下次请求如果有此缓存会把最后修改日期提交服务器，服务器如果没有修改就不返回文件，返回状态码304     
  一个空行
  实体内容
请求方式：get post，区别：
  1.get方式提交的数据会放在url后面，post提交的数据会放在实体内容中
    php的url编码函数 urlencode()
    php的url解码函数 urldecode()
  2.提交数据长度限制：
    get数据长度是由浏览器或操作系统来限制
    post数据理论上没有限制
    如果我们要上传或下载文件，可以使用http协议，但该文件一般不要大于2m
    如果要上传或下载大文件，一种方案写插件，一种方案开发客户端，传太大文件容易超时
    配置上传文件大小在php.ini中搜索upload_max_fileSize
302 重定向
	header("location:../");
301 永久重定向
	header("HTTP/1.1 301 Moved Permanently");
	header("location:../");		
				
				
				
				
				
				





















